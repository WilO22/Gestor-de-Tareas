rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================================================
    // FUNCIONES AUXILIARES
    // ============================================================================
    
    // Verifica si un usuario es administrador global del sistema
    function isGlobalAdmin(userId) {
      let user = get(/databases/$(database)/documents/users/$(userId));
      return user != null && user.data.role == 'admin';
    }
    
    // ============================================================================
    // REGLAS PARA USUARIOS
    // ============================================================================
    
    match /users/{userId} {
      // LECTURA: El usuario puede leer su propio perfil O cualquier autenticado para búsquedas
      allow read: if request.auth != null && (
        request.auth.uid == userId ||  // Su propio perfil
        true  // Cualquier autenticado puede buscar usuarios (para invitaciones)
      );
      
      // ESCRITURA: Solo el propio usuario puede modificar su perfil
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // ============================================================================
    // REGLAS PARA WORKSPACES
    // ============================================================================
    
    match /workspaces/{workspaceId} {
      // LECTURA: Permitir acceso a cualquier usuario autenticado
      allow read: if request.auth != null;
      
      // CREACIÓN: Cualquier usuario autenticado puede crear un workspace
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.ownerId;
      
      // ACTUALIZACIÓN: Solo el owner o admins globales
      allow update: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
      
      // ELIMINACIÓN: Solo el owner o admins globales
      allow delete: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
    }
    
    // ============================================================================
    // REGLAS PARA BOARDS
    // ============================================================================
    
    match /boards/{boardId} {
      // LECTURA: Requiere autenticación
      allow read: if request.auth != null;
      
      // CREACIÓN: Requiere autenticación
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Requiere autenticación
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Requiere autenticación
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA COLUMNAS
    // ============================================================================
    
    match /columns/{columnId} {
      // LECTURA: Requiere autenticación
      allow read: if request.auth != null;
      
      // CREACIÓN: Requiere autenticación
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Requiere autenticación
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Requiere autenticación
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA TAREAS
    // ============================================================================
    
    match /tasks/{taskId} {
      // LECTURA: Requiere autenticación
      allow read: if request.auth != null;
      
      // CREACIÓN: Requiere autenticación
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Requiere autenticación
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Requiere autenticación
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA INVITACIONES
    // ============================================================================
    
    match /invitations/{invitationId} {
      // LECTURA: Permitir lectura a usuarios autenticados
      allow read: if request.auth != null;
      
      // CREACIÓN: Solo usuarios autenticados pueden crear invitaciones
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Permitir actualización a usuarios autenticados
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Solo usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA MEMBRESÍAS DE WORKSPACE
    // ============================================================================
    
    match /workspace_members/{memberId} {
      // LECTURA: Los usuarios pueden leer membresías donde son miembros
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Puede leer sus propias membresías
        isGlobalAdmin(request.auth.uid)
      );
      
      // CREACIÓN: Solo usuarios autenticados pueden crear membresías
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Solo el propio usuario o admins
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Solo el propio usuario o admins  
      allow delete: if request.auth != null;
    }

    // ============================================================================
    // REGLAS ESPECIALES PARA ADMINISTRADORES GLOBALES
    // ============================================================================
    
    // Los administradores globales pueden leer cualquier documento (para reportes)
    match /{document=**} {
      allow read: if request.auth != null && isGlobalAdmin(request.auth.uid);
    }
  }
}
      
      // ACTUALIZACIÓN: Solo el owner o admins globales
      allow update: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
      
      // ELIMINACIÓN: Solo el owner o admins globales
      allow delete: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
    }
    
    // ============================================================================
    // REGLAS PARA BOARDS
    // ============================================================================
    
    match /boards/{boardId} {
      // LECTURA: CORREGIDO - Permitir acceso a usuarios autenticados
      // La lógica de membresía se valida en el cliente
      allow read: if request.auth != null;
      
      // CREACIÓN: CORREGIDO - Permitir a usuarios autenticados crear boards
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: CORREGIDO - Permitir a usuarios autenticados actualizar boards
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: CORREGIDO - Permitir a usuarios autenticados eliminar boards
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA COLUMNAS
    // ============================================================================
    
    match /columns/{columnId} {
      // LECTURA: Requiere autenticación
      allow read: if request.auth != null;
      
      // CREACIÓN: Requiere autenticación y campos requeridos
      allow create: if request.auth != null && 
        request.resource.data.keys().hasAll(['name', 'boardId', 'order']);
      
      // ACTUALIZACIÓN: Requiere autenticación
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Requiere autenticación
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA TAREAS
    // ============================================================================
    
    match /tasks/{taskId} {
      // LECTURA: Requiere autenticación
      allow read: if request.auth != null;
      
      // CREACIÓN: Requiere autenticación y campos requeridos
      allow create: if request.auth != null && 
        request.resource.data.keys().hasAll(['title', 'boardId', 'columnId']);
      
      // ACTUALIZACIÓN: Requiere autenticación
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Requiere autenticación
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA INVITACIONES (NUEVO: Sistema de invitaciones por email)
    // ============================================================================
    
    match /invitations/{invitationId} {
      // LECTURA: Permitir lectura a usuarios autenticados por ahora
      allow read: if request.auth != null;
      
      // CREACIÓN: Solo usuarios autenticados pueden crear invitaciones
      allow create: if request.auth != null;
      
      // ACTUALIZACIÓN: Permitir actualización a usuarios autenticados
      allow update: if request.auth != null;
      
      // ELIMINACIÓN: Solo usuarios autenticados
      allow delete: if request.auth != null;
    }
    
    // ============================================================================
    // REGLAS PARA MEMBRESÍAS DE WORKSPACE (NUEVO: Para manejar aceptación de invitaciones)
    // ============================================================================
    
    match /workspace_members/{memberId} {
      // LECTURA: Los usuarios pueden leer membresías donde son miembros del workspace
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid ||  // Puede leer sus propias membresías
        resource.data.workspaceId == request.auth.uid ||  // Simplificado: permitir leer membresías del workspace
        isGlobalAdmin(request.auth.uid)
      );
      
      // CREACIÓN: Solo usuarios autenticados pueden crear membresías (al aceptar invitaciones)
      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||  // Usuario creando su propia membresía
        isGlobalAdmin(request.auth.uid)
      );
      
      // ACTUALIZACIÓN: Solo el propio usuario o admins
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
      
      // ELIMINACIÓN: Solo el propio usuario o admins  
      allow delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        isGlobalAdmin(request.auth.uid)
      );
    }

    // ============================================================================
    // REGLAS ESPECIALES PARA ADMINISTRADORES GLOBALES
    // ============================================================================
    
    // Los administradores globales pueden leer cualquier documento (para reportes)
    match /{document=**} {
      allow read: if request.auth != null && isGlobalAdmin(request.auth.uid);
    }
  }
}
