---
// // src/pages/dashboard-refactored.astro
// // REFACTORIZACIÓN: Dashboard modular usando componentes especializados
// // Soluciona problemas de arquitectura monolítica del dashboard original

import Layout from '../layouts/Layout.astro';
import DashBoardHeader from '../components/dashboard/DashBoardHeader.astro';
import Sidebar from '../components/dashboard/Sidebar.astro';
import WorkspaceGrid from '../components/dashboard/WorkspaceGrid.astro';
import BoardOverview from '../components/dashboard/BoardOverview.astro';
import MemberManagement from '../components/dashboard/MemberManagement.astro';
void MemberManagement;
import MemberOptionsModal from '../components/ui/MemberOptionsModal.astro';
import Toast from '../components/ui/Toast.astro';
---

<Layout title="Dashboard - TaskFlow">
  <!-- // Header del dashboard -->
  <DashBoardHeader />
  
  <div class="flex h-screen bg-gray-100">
    <!-- // Sidebar -->
    <Sidebar />
    
    <!-- // Contenido principal -->
    <main class="flex-1 overflow-auto p-6">
      <!-- // Loading screen -->
      <div id="loading-screen" class="fixed inset-0 bg-white z-50 flex items-center justify-center">
        <div class="text-center">
          <div class="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600"></div>
          <p class="mt-4 text-gray-600">Cargando dashboard...</p>
        </div>
      </div>
      
      <!-- // Container principal del contenido -->
      <div id="app-container" class="hidden">
        
        <!-- // Vista de workspaces -->
        <div id="workspaces-view" class="space-y-6">
          <div class="flex items-center justify-between">
            <h1 class="text-3xl font-bold text-gray-900">Mis Espacios de Trabajo</h1>
            <button id="create-workspace-btn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors">
              Crear Workspace
            </button>
          </div>
          
          <!-- // Lista de workspaces -->
          <WorkspaceGrid />
        </div>
        
        <!-- // Vista de boards -->
        <BoardOverview />
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Nombre</label>
                    <input 
                      type="text" 
                      id="workspace-name-input" 
                      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" 
                      placeholder="Nombre del workspace"
                    >
                  </div>
                  
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Descripción</label>
                    <textarea 
                      id="workspace-description-input" 
                      rows="3" 
                      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" 
                      placeholder="Descripción del workspace"
                    ></textarea>
                  </div>
                  
                  <div class="flex justify-end space-x-2">
                    <button type="button" id="cancel-config" class="px-4 py-2 text-gray-600 bg-gray-200 rounded-md hover:bg-gray-300">
                      Cancelar
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                      Guardar Cambios
                    </button>
                  </div>
                </form>
              </div>
            </div>
            
          </div>
        </div>
        
      </div>
    </main>
  </div>
  
  <!-- // Modales -->
  <MemberOptionsModal />
  
  <!-- // Sistema de notificaciones -->
  <Toast />
  
</Layout>

<script>
  // // SCRIPT REFACTORIZADO: Solo lógica esencial, componentes manejan su propia funcionalidad
  import { auth } from '../firebase/auth';
  import { onAuthStateChanged } from 'firebase/auth';
  import { subscribeToUserWorkspaces, subscribeToBoardsInWorkspace } from '../firebase/api';
  import '../scripts/member-management';
  
  // // Estado global simplificado
  let currentUser: any = null;
  let currentWorkspaceId: string | null = null;
  let unsubscribeWorkspaces: any = null;
  let unsubscribeBoards: any = null;
  
  // // Elementos del DOM
  const loadingScreen = document.getElementById('loading-screen');
  const appContainer = document.getElementById('app-container');
  const workspacesView = document.getElementById('workspaces-view');
  const boardsView = document.getElementById('boards-view');
  
  // // INICIALIZACIÓN
  document.addEventListener('DOMContentLoaded', () => {
    console.log('📄 Dashboard refactorizado cargado');
    setupEventListeners();
  });
  
  // // AUTENTICACIÓN
  onAuthStateChanged(auth, (user) => {
    if (user) {
      currentUser = {
        id: user.uid,
        email: user.email,
        displayName: user.displayName || user.email?.split('@')[0] || 'Usuario'
      };
      
      console.log('🔐 Usuario autenticado:', currentUser);
      
      // // Configurar estado en el módulo de member management
      if (typeof (window as any).MemberManagementUtils?.setMemberManagementState === 'function') {
        (window as any).MemberManagementUtils.setMemberManagementState(
          currentWorkspaceId || '',
          currentUser,
          'member' // // Se actualiza cuando se selecciona un workspace
        );
      }
      
      // // Cargar workspaces
      loadUserWorkspaces();
      
      // // Ocultar loading y mostrar app
      hideLoading();
    } else {
      console.log('❌ Usuario no autenticado, redirigiendo...');
      window.location.href = '/login';
    }
  });
  
  // // FUNCIÓN: Configurar event listeners
  function setupEventListeners() {
    // // Navegación
    document.getElementById('back-to-workspaces')?.addEventListener('click', showWorkspacesView);
    
    // // Creación
    document.getElementById('create-workspace-btn')?.addEventListener('click', showCreateWorkspaceModal);
    document.getElementById('create-board-btn')?.addEventListener('click', showCreateBoardModal);
    
    // // Tabs
    document.querySelectorAll('.tab-btn').forEach(tab => {
      tab.addEventListener('click', (e) => {
        const tabId = (e.target as HTMLElement).id;
        switchTab(tabId);
      });
    });
    
    console.log('✅ Event listeners configurados');
    // // Escuchar eventos emitidos por el Sidebar Island para acciones (Tableros/Miembros/Config)
    document.addEventListener('sidebar-action', (ev: any) => {
      // // ev.detail: { action, workspaceId }
      const { action, workspaceId } = ev.detail || {};
      if (!action || !workspaceId) return;

      // // Si existe la API showBoardsView, usarla para mostrar tableros dentro del dashboard
      if (typeof (window as any).showBoardsView === 'function') {
        try {
          (window as any).showBoardsView(workspaceId);
          // // Si la acción es 'members' activar la pestaña miembros
          if (action === 'members') setTimeout(() => document.getElementById('members-tab')?.click(), 120);
          if (action === 'config') setTimeout(() => document.getElementById('config-tab')?.click(), 120);
        } catch (err) {
          console.error('Error handling sidebar-action via showBoardsView', err);
        }
        return;
      }

      // // Si no existe showBoardsView, intentar delegar a dashboardIslands si está disponible
      const dashboard = (window as any).dashboardIslands;
      if (dashboard && typeof dashboard.navigateToWorkspace === 'function') {
        try { dashboard.navigateToWorkspace(workspaceId).then(() => { if (action === 'members') dashboard.switchWorkspaceTab('members'); if (action === 'boards') dashboard.switchWorkspaceTab('boards'); }); } catch (e) { console.error(e); }
        return;
      }

      // // último recurso: navegar a la ruta de tableros en la página completa
      if (action === 'boards' || action === 'members') window.location.href = `/workspace/${workspaceId}/boards`;
      if (action === 'config') window.location.href = `/workspace/${workspaceId}/settings`;
    });
  }
  
  // // FUNCIÓN: Cargar workspaces del usuario
  function loadUserWorkspaces() {
    if (!currentUser) return;
    
    // // Limpiar suscripción anterior
    if (unsubscribeWorkspaces) {
      unsubscribeWorkspaces();
    }
    
    // // Suscribirse a cambios en workspaces
    unsubscribeWorkspaces = subscribeToUserWorkspaces(currentUser.id, (workspaces) => {
      console.log('📊 Workspaces actualizados:', workspaces.length);
      renderWorkspaces(workspaces);
    });
  }
  
  // // FUNCIÓN: Renderizar lista de workspaces
  function renderWorkspaces(workspaces: any[]) {
    const workspacesList = document.getElementById('workspaces-list');
    if (!workspacesList) return;
    
    if (workspaces.length === 0) {
      workspacesList.innerHTML = `
        <div class="col-span-full text-center py-12">
          <svg class="w-16 h-16 mx-auto text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No tienes espacios de trabajo</h3>
          <p class="text-gray-500 mb-4">Crea tu primer workspace para comenzar</p>
          <button onclick="showCreateWorkspaceModal()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium">
            Crear Workspace
          </button>
        </div>
      `;
    } else {
      workspacesList.innerHTML = workspaces.map(workspace => `
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer" 
             onclick="selectWorkspace('${workspace.id}', '${workspace.name}')">
          <div class="flex items-center space-x-3 mb-3">
            <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-semibold">
              ${workspace.name.charAt(0).toUpperCase()}
            </div>
            <h3 class="text-lg font-semibold text-gray-900">${workspace.name}</h3>
          </div>
          <p class="text-sm text-gray-600 mb-4">${workspace.description || 'Sin descripción'}</p>
          <div class="flex items-center justify-between text-sm text-gray-500">
            <span>${workspace.membersCount || 0} miembros</span>
            <span>${workspace.boardsCount || 0} tableros</span>
          </div>
        </div>
      `).join('');
    }
  }
  
  // // FUNCIÓN: Seleccionar workspace
  function selectWorkspace(workspaceId: string, workspaceName: string) {
    currentWorkspaceId = workspaceId;
    
    // // Actualizar UI
    const workspaceNameElement = document.getElementById('current-workspace-name');
    if (workspaceNameElement) {
      workspaceNameElement.textContent = workspaceName;
    }
    
    // // Actualizar componente de miembros
    const memberManagement = document.querySelector('[data-workspace-id]') as HTMLElement;
    if (memberManagement) {
      memberManagement.dataset.workspaceId = workspaceId;
    }
    
    // // Actualizar estado en member management
    if (typeof (window as any).MemberManagementUtils?.setMemberManagementState === 'function') {
      (window as any).MemberManagementUtils.setMemberManagementState(
        workspaceId,
        currentUser,
        'member' // // TODO: Obtener rol real del usuario
      );
    }
    
    // // Cargar boards del workspace
    loadWorkspaceBoards(workspaceId);
    
    // // Mostrar vista de boards
    showBoardsView();
  }
  
  // // FUNCIÓN: Cargar boards del workspace
  function loadWorkspaceBoards(workspaceId: string) {
    // // Limpiar suscripción anterior
    if (unsubscribeBoards) {
      unsubscribeBoards();
    }
    
    // // Suscribirse a cambios en boards
    unsubscribeBoards = subscribeToBoardsInWorkspace(workspaceId, (boards) => {
      console.log('📋 Boards actualizados:', boards.length);
      renderBoards(boards);
    });
  }
  
  // // FUNCIÓN: Renderizar boards
  function renderBoards(boards: any[]) {
    const boardsList = document.getElementById('boards-list');
    if (!boardsList) return;
    
    if (boards.length === 0) {
      boardsList.innerHTML = `
        <div class="col-span-full text-center py-12">
          <svg class="w-16 h-16 mx-auto text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 17V7m0 0a2 2 0 012-2h2a2 2 0 012 2v10m-4 0h4"></path>
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No hay tableros</h3>
          <p class="text-gray-500 mb-4">Crea tu primer tablero para comenzar</p>
          <button onclick="showCreateBoardModal()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium">
            Crear Tablero
          </button>
        </div>
      `;
    } else {
      boardsList.innerHTML = boards.map(board => `
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow cursor-pointer" 
             onclick="openBoard('${board.id}')">
          <h3 class="text-lg font-semibold text-gray-900 mb-2">${board.name}</h3>
          <p class="text-sm text-gray-600 mb-4">${board.description || 'Sin descripción'}</p>
          <div class="flex items-center justify-between text-sm text-gray-500">
            <span>${board.columnsCount || 0} columnas</span>
            <span>${board.tasksCount || 0} tareas</span>
          </div>
        </div>
      `).join('');
    }
  }
  
  // // FUNCIÓN: Cambiar entre tabs
  function switchTab(tabId: string) {
    // // Actualizar botones de tab
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.classList.remove('border-blue-500', 'text-blue-600');
      btn.classList.add('border-transparent', 'text-gray-500');
    });
    
    const activeTab = document.getElementById(tabId);
    if (activeTab) {
      activeTab.classList.remove('border-transparent', 'text-gray-500');
      activeTab.classList.add('border-blue-500', 'text-blue-600');
    }
    
    // // Mostrar contenido correspondiente
    document.querySelectorAll('.tab-content').forEach(content => {
      content.classList.add('hidden');
    });
    
    const contentMap: { [key: string]: string } = {
      'boards-tab': 'boards-content',
      'members-tab': 'members-content',
      'config-tab': 'config-content'
    };
    
    const contentId = contentMap[tabId];
    if (contentId) {
      const content = document.getElementById(contentId);
      if (content) {
        content.classList.remove('hidden');
        
        // // Si es el tab de miembros, actualizar el workspace ID
        if (contentId === 'members-content' && currentWorkspaceId) {
          const memberComponent = content.querySelector('[data-workspace-id]') as HTMLElement;
          if (memberComponent) {
            memberComponent.dataset.workspaceId = currentWorkspaceId;
          }
        }
      }
    }
  }
  
  // // FUNCIÓN: Mostrar vista de workspaces
  function showWorkspacesView() {
    workspacesView?.classList.remove('hidden');
    boardsView?.classList.add('hidden');
    currentWorkspaceId = null;
  }
  
  // // FUNCIÓN: Mostrar vista de boards
  function showBoardsView() {
    workspacesView?.classList.add('hidden');
    boardsView?.classList.remove('hidden');
  }
  
  // // FUNCIÓN: Ocultar loading
  function hideLoading() {
    loadingScreen?.classList.add('hidden');
    appContainer?.classList.remove('hidden');
  }
  
  // // FUNCIÓN: Abrir board
  function openBoard(boardId: string) {
    if (currentWorkspaceId) {
      window.location.href = `/workspace/${currentWorkspaceId}/board/${boardId}`;
    }
  }
  
  // // FUNCIONES PLACEHOLDER (implementar según necesidad)
  function showCreateWorkspaceModal() {
    alert('Función de crear workspace - implementar modal');
  }
  
  function showCreateBoardModal() {
    alert('Función de crear board - implementar modal');
  }
  
  // // HACER FUNCIONES DISPONIBLES GLOBALMENTE
  (window as any).selectWorkspace = selectWorkspace;
  (window as any).openBoard = openBoard;
  (window as any).showCreateWorkspaceModal = showCreateWorkspaceModal;
  (window as any).showCreateBoardModal = showCreateBoardModal;
  (window as any).switchTab = switchTab;
  
  // // EXPORTAR ESTADO PARA DEBUGGING
  (window as any).DashboardState = {
    currentUser,
    currentWorkspaceId,
    getCurrentUser: () => currentUser,
    getCurrentWorkspaceId: () => currentWorkspaceId
  };
</script>

<style>
  /* // Estilos específicos del dashboard refactorizado */
  .tab-btn {
    transition: all 0.2s ease-in-out;
  }
  
  .tab-btn:hover {
    color: #374151;
  }
  
  .tab-content {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
