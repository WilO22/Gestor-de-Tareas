---
// src/pages/debug-data.astro
// P√°gina de debug para verificar workspaces y boards
import Layout from '../layouts/Layout.astro';
---

<Layout title="Debug - Datos">
  <div class="min-h-screen bg-gray-100 p-8">
    <div class="max-w-4xl mx-auto">
      <h1 class="text-3xl font-bold mb-6">üîç Debug - Workspaces y Boards</h1>

      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4">Estado de Autenticaci√≥n</h2>
        <div id="auth-status" class="text-gray-600">Verificando...</div>
      </div>

      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4">Workspaces del Usuario</h2>
        <button id="load-workspaces" class="bg-blue-600 text-white px-4 py-2 rounded mb-4">
          Cargar Workspaces
        </button>
        <div id="workspaces-list" class="space-y-2">
          <p class="text-gray-500">Haz clic en "Cargar Workspaces" para ver todos los workspaces</p>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4">Boards de un Workspace</h2>
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Workspace ID</label>
            <input
              id="workspace-id-input"
              type="text"
              placeholder="Ingresa el ID del workspace"
              class="w-full p-2 border rounded"
            >
          </div>
          <button id="load-boards" class="bg-green-600 text-white px-4 py-2 rounded">
            Cargar Boards
          </button>
          <div id="boards-list" class="space-y-2">
            <p class="text-gray-500">Ingresa un Workspace ID y haz clic en "Cargar Boards"</p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold mb-4">Crear Datos de Prueba</h2>
        <button id="create-test-data" class="bg-red-600 text-white px-4 py-2 rounded mb-4">
          Crear Workspace y Boards de Prueba
        </button>
        <div id="test-data-result" class="text-gray-600">
          <p>Esta funci√≥n crear√° un workspace de prueba con algunos boards</p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script type="module" is:inline>
  import { getAuth, onAuthStateChanged } from '../firebase/auth';
  import { getUserWorkspaces, getWorkspaceBoards, createWorkspace, createBoard } from '../firebase/api';

  const auth = getAuth();

  // Estado de autenticaci√≥n
  const authStatusEl = document.getElementById('auth-status');

  onAuthStateChanged(auth, (user) => {
    if (user) {
      authStatusEl.textContent = `‚úÖ Autenticado como: ${user.email} (UID: ${user.uid})`;
      authStatusEl.className = 'text-green-600';
    } else {
      authStatusEl.textContent = '‚ùå No autenticado';
      authStatusEl.className = 'text-red-600';
    }
  });

  // Cargar workspaces
  document.getElementById('load-workspaces').addEventListener('click', async () => {
    const workspacesListEl = document.getElementById('workspaces-list');
    workspacesListEl.innerHTML = '<p class="text-blue-600">Cargando workspaces...</p>';

    try {
      const user = auth.currentUser;
      if (!user) {
        workspacesListEl.innerHTML = '<p class="text-red-600">Debes estar autenticado</p>';
        return;
      }

      const workspaces = await getUserWorkspaces(user.uid);
      console.log('Debug: Workspaces obtenidos:', workspaces);

      if (!workspaces || workspaces.length === 0) {
        workspacesListEl.innerHTML = '<p class="text-gray-500">No hay workspaces</p>';
        return;
      }

      const html = workspaces.map(workspace => `
        <div class="border rounded p-3">
          <h3 class="font-semibold">${workspace.name}</h3>
          <p class="text-sm text-gray-600">ID: ${workspace.id}</p>
          <p class="text-sm text-gray-600">Owner: ${workspace.ownerId}</p>
          <p class="text-sm text-gray-600">Miembros: ${workspace.members?.length || 0}</p>
        </div>
      `).join('');

      workspacesListEl.innerHTML = html;
    } catch (error) {
      console.error('Error cargando workspaces:', error);
      workspacesListEl.innerHTML = `<p class="text-red-600">Error: ${error.message}</p>`;
    }
  });

  // Cargar boards
  document.getElementById('load-boards').addEventListener('click', async () => {
    const workspaceId = document.getElementById('workspace-id-input').value.trim();
    const boardsListEl = document.getElementById('boards-list');

    if (!workspaceId) {
      boardsListEl.innerHTML = '<p class="text-red-600">Ingresa un Workspace ID</p>';
      return;
    }

    boardsListEl.innerHTML = '<p class="text-blue-600">Cargando boards...</p>';

    try {
      const boards = await getWorkspaceBoards(workspaceId);
      console.log('Debug: Boards obtenidos:', boards);

      if (!boards || boards.length === 0) {
        boardsListEl.innerHTML = '<p class="text-gray-500">No hay boards en este workspace</p>';
        return;
      }

      const html = boards.map(board => `
        <div class="border rounded p-3">
          <h3 class="font-semibold">${board.name}</h3>
          <p class="text-sm text-gray-600">ID: ${board.id}</p>
          <p class="text-sm text-gray-600">Workspace: ${board.workspaceId}</p>
          <p class="text-sm text-gray-600">Columnas: ${board.columns?.length || 0}</p>
        </div>
      `).join('');

      boardsListEl.innerHTML = html;
    } catch (error) {
      console.error('Error cargando boards:', error);
      boardsListEl.innerHTML = `<p class="text-red-600">Error: ${error.message}</p>`;
    }
  });

  // Crear datos de prueba
  document.getElementById('create-test-data').addEventListener('click', async () => {
    const resultEl = document.getElementById('test-data-result');
    resultEl.innerHTML = '<p class="text-blue-600">Creando datos de prueba...</p>';

    try {
      const user = auth.currentUser;
      if (!user) {
        resultEl.innerHTML = '<p class="text-red-600">Debes estar autenticado</p>';
        return;
      }

      // Crear workspace
      const workspaceResult = await createWorkspace('Workspace de Prueba', user.uid);
      if (workspaceResult.error) {
        resultEl.innerHTML = `<p class="text-red-600">Error creando workspace: ${workspaceResult.error}</p>`;
        return;
      }

      const workspaceId = workspaceResult.id;
      resultEl.innerHTML = `<p class="text-green-600">‚úÖ Workspace creado: ${workspaceId}</p>`;

      // Crear algunos boards
      const boardNames = ['Tablero 1', 'Tablero 2', 'Tablero 3'];
      for (const boardName of boardNames) {
        const boardResult = await createBoard(boardName, workspaceId);
        if (boardResult.error) {
          resultEl.innerHTML += `<p class="text-red-600">Error creando board ${boardName}: ${boardResult.error}</p>`;
        } else {
          resultEl.innerHTML += `<p class="text-green-600">‚úÖ Board creado: ${boardName}</p>`;
        }
      }

      resultEl.innerHTML += '<p class="text-blue-600">¬°Datos de prueba creados! Recarga la p√°gina para verlos.</p>';

    } catch (error) {
      console.error('Error creando datos de prueba:', error);
      resultEl.innerHTML = `<p class="text-red-600">Error: ${error.message}</p>`;
    }
  });
</script>