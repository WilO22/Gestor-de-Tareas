---
// src/components/board/BoardCard.astro
// Componente de tarjeta para un Board usando BaseCard

import BaseCard from '../base/BaseCard.astro';
import { formatRelativeTime } from '../../utils/date.utils';

export interface Props {
  id: string;
  title: string;
  description?: string;
  columnCount?: number;
  taskCount?: number;
  lastActivity?: Date;
  workspaceId: string;
  color?: 'blue' | 'green' | 'purple' | 'pink' | 'indigo' | 'red' | 'yellow' | 'gray';
}

const {
  id,
  title,
  description,
  columnCount = 0,
  taskCount = 0,
  lastActivity,
  workspaceId,
  color = 'blue'
} = Astro.props;

// Generar iniciales del board
function getBoardInitials(title: string): string {
  return title
    .split(' ')
    .map(word => word.charAt(0))
    .join('')
    .toUpperCase()
    .slice(0, 2);
}

// Colores disponibles para board
type ColorKey = 'blue' | 'green' | 'purple' | 'pink' | 'indigo' | 'red' | 'yellow' | 'gray';
const colorClasses: Record<ColorKey, string> = {
  blue: 'bg-blue-500',
  green: 'bg-green-500',
  purple: 'bg-purple-500',
  pink: 'bg-pink-500',
  indigo: 'bg-indigo-500',
  red: 'bg-red-500',
  yellow: 'bg-yellow-500',
  gray: 'bg-gray-500'
};
---

<BaseCard
  href={`/workspace/${workspaceId}/board/${id}`}
  title={title}
  subtitle={description}
  variant="elevated"
  size="md"
  avatar={true}
  footer={true}
  class="board-card hover:scale-105 transition-transform duration-200"
>
  <!-- Avatar del board -->
  <div slot="avatar" class={`w-12 h-12 ${colorClasses[color]} rounded-lg flex items-center justify-center text-white font-bold text-lg shadow-md`}>
    {getBoardInitials(title)}
  </div>

  <!-- Contenido principal -->
  <div class="space-y-3">
    <!-- Estadísticas del board -->
    <div class="grid grid-cols-2 gap-4 text-sm">
      <div class="flex items-center space-x-2 text-gray-600">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
        </svg>
        <span>{columnCount} {columnCount === 1 ? 'columna' : 'columnas'}</span>
      </div>

      <div class="flex items-center space-x-2 text-gray-600">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <span>{taskCount} {taskCount === 1 ? 'tarea' : 'tareas'}</span>
      </div>
    </div>
  </div>

  <!-- Footer con actividad reciente -->
  <div slot="footer" class="flex items-center justify-between text-xs text-gray-500">
    <div class="flex items-center space-x-1">
      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <span>
        {lastActivity
          ? `Actualizado ${formatRelativeTime(lastActivity)}`
          : 'Sin actividad reciente'
        }
      </span>
    </div>

    <!-- Indicador de acceso rápido -->
    <div class="opacity-0 group-hover:opacity-100 transition-opacity">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
      </svg>
    </div>
  </div>
</BaseCard>

<style>
  .board-card:hover .group-hover\:opacity-100 {
    opacity: 1;
  }
</style>
