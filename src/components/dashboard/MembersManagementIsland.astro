---
// src/components/dashboard/MembersManagementIsland.astro
// Server Island para gesti√≥n de miembros - renderiza y gestiona miembros del workspace

// Props del island
interface Props {
  workspaceId: string;
  currentUserId?: string;
  currentUserRole?: string;
}

const { 
  workspaceId, 
  currentUserId = '', 
  currentUserRole = 'member' 
} = Astro.props;

// Determinar permisos en el servidor
const canManageMembers = currentUserRole === 'owner' || currentUserRole === 'admin';

// En el servidor, podr√≠amos pre-cargar miembros si workspaceId es v√°lido
let serverMembers = [];
let serverInvitations: any[] = [];
try {
  if (workspaceId && workspaceId !== '') {
    const { getWorkspaceMembers } = await import('../../firebase/api');
    const { getWorkspaceInvitations } = await import('../../firebase/invitations');
    serverMembers = await getWorkspaceMembers(workspaceId);
    if (canManageMembers) {
      serverInvitations = await getWorkspaceInvitations(workspaceId);
    }
  }
  console.log('üèùÔ∏è MembersManagementIsland: Renderizando en servidor para workspace', workspaceId, 'con', serverMembers.length, 'miembros');
  void serverInvitations; // evitar ts(6133) cuando no se usa en el render
} catch (e) {
  console.error('‚ùå MembersManagementIsland: Error cargando datos en servidor:', e);
}
---

<div id="members-management-view" class="members-management-island" data-island="members-management" data-workspace-id={workspaceId} data-current-user-id={currentUserId} data-current-user-role={currentUserRole} data-can-manage-members={canManageMembers}>
  
  <!-- Header de gesti√≥n de miembros -->
  <div class="flex items-center justify-between mb-6">
    <div>
      <h3 class="text-lg font-semibold text-gray-900">
        Miembros del Workspace
      </h3>
      <p class="text-sm text-gray-600 mt-1">
        Gestiona qui√©n tiene acceso a este workspace
      </p>
    </div>
    
    <!-- Contador y bot√≥n de invitar -->
    <div class="flex items-center space-x-4">
      <span id="members-count" class="text-sm text-gray-500">
        Cargando...
      </span>
      
      {canManageMembers && (
        <button 
          id="invite-member-btn"
          class="flex items-center space-x-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          <span>Invitar Miembro</span>
        </button>
      )}
    </div>
  </div>
  
  <!-- Tabs de navegaci√≥n -->
  <div class="border-b border-gray-200 mb-6">
    <nav class="-mb-px flex space-x-8">
      <button 
        id="members-tab"
        class="tab-button active py-2 px-1 border-b-2 border-blue-500 font-medium text-sm text-blue-600"
        data-tab="members"
      >
        Miembros Activos
        <span id="active-members-badge" class="ml-2 bg-blue-100 text-blue-600 py-0.5 px-2 rounded-full text-xs">0</span>
      </button>
      
      {canManageMembers && (
        <button 
          id="invitations-tab"
          class="tab-button py-2 px-1 border-b-2 border-transparent font-medium text-sm text-gray-500 hover:text-gray-700 hover:border-gray-300"
          data-tab="invitations"
        >
          Invitaciones Pendientes
          <span id="pending-invitations-badge" class="ml-2 bg-gray-100 text-gray-600 py-0.5 px-2 rounded-full text-xs">0</span>
        </button>
      )}
    </nav>
  </div>
  
  <!-- Contenido de tabs -->
  <div class="tab-content">
    
    <!-- Tab de miembros activos -->
    <div id="members-content" class="tab-pane active">
      <div id="members-list" class="space-y-3">
        <!-- Estado de carga inicial -->
        <div class="loading-state">
          {[1, 2, 3].map(() => (
            <div class="animate-pulse flex items-center justify-between p-4 border border-gray-200 rounded-lg">
              <div class="flex items-center space-x-3">
                <div class="w-12 h-12 bg-gray-300 rounded-full"></div>
                <div class="flex-1">
                  <div class="h-4 bg-gray-300 rounded w-32 mb-2"></div>
                  <div class="h-3 bg-gray-300 rounded w-24"></div>
                </div>
              </div>
              <div class="w-8 h-8 bg-gray-300 rounded"></div>
            </div>
          ))}
        </div>
      </div>
    </div>
    
    <!-- Tab de invitaciones pendientes -->
    {canManageMembers && (
      <div id="invitations-content" class="tab-pane hidden">
        <div id="invitations-list" class="space-y-3">
          <!-- Estado de carga inicial -->
          <div class="loading-state">
            <div class="animate-pulse flex items-center justify-between p-4 border border-yellow-200 rounded-lg bg-yellow-50">
              <div class="flex items-center space-x-3">
                <div class="w-12 h-12 bg-yellow-300 rounded-full"></div>
                <div class="flex-1">
                  <div class="h-4 bg-yellow-300 rounded w-40 mb-2"></div>
                  <div class="h-3 bg-yellow-300 rounded w-28"></div>
                </div>
              </div>
              <div class="flex space-x-2">
                <div class="w-8 h-8 bg-yellow-300 rounded"></div>
                <div class="w-8 h-8 bg-yellow-300 rounded"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    )}
  </div>
  
  <!-- Estado vac√≠o para miembros -->
  <div id="members-empty" class="hidden text-center py-12">
    <div class="text-gray-400 mb-4">
      <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
      </svg>
    </div>
    <h3 class="text-lg font-medium text-gray-900 mb-2">No hay miembros a√∫n</h3>
    <p class="text-gray-500">Invita a tu equipo para empezar a colaborar</p>
  </div>
  
  <!-- Estado vac√≠o para invitaciones -->
  <div id="invitations-empty" class="hidden text-center py-8">
    <div class="text-gray-400 mb-4">
      <svg class="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
      </svg>
    </div>
    <p class="text-gray-500">No hay invitaciones pendientes</p>
  </div>

</div>

<!-- Cargar el m√≥dulo cliente procesado por Astro (permite TypeScript y bundling) -->
<script src="../../scripts/dashboard/members-management.ts"></script>

<style>
  /* Estilos espec√≠ficos del MembersManagementIsland */
  .members-management-island {
    min-height: 300px;
  }
  
  .tab-button.active {
    border-color: #3b82f6;
    color: #3b82f6;
  }
  
  .tab-pane {
    min-height: 200px;
  }
  
  .member-item,
  .invitation-item {
    transition: all 0.2s ease-in-out;
  }
  
  .member-item:hover,
  .invitation-item:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  
  .member-options-btn {
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }
  
  .member-item:hover .member-options-btn {
    opacity: 1;
  }
  
  .loading-state {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>
