---
// src/components/ui/Button.astro
// Componente Button robusto y reutilizable con múltiples variantes - MEJORADO

export interface Props {
  // Contenido del botón
  children?: any;
  text?: string;
  icon?: string;
  iconPosition?: 'left' | 'right';
  
  // Tipo de elemento
  type?: 'button' | 'submit' | 'reset';
  href?: string;
  
  // Variantes de estilo - MEJORADO
  variant?: 'primary' | 'secondary' | 'danger' | 'success' | 'warning' | 'ghost' | 'outline' | 'link' | 'gradient';
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  shape?: 'square' | 'rounded' | 'pill' | 'circle';
  
  // Tema y colores - NUEVO
  theme?: 'light' | 'dark' | 'auto';
  accentColor?: 'blue' | 'green' | 'red' | 'yellow' | 'purple' | 'pink' | 'indigo' | 'gray';
  
  // Estados - MEJORADO
  disabled?: boolean;
  loading?: boolean;
  active?: boolean;
  pressed?: boolean;
  
  // Interacción - NUEVO
  fullWidth?: boolean;
  block?: boolean;
  noWrap?: boolean;
  
  // Accesibilidad - NUEVO
  ariaLabel?: string;
  ariaDescribedBy?: string;
  
  // Clases adicionales
  class?: string;
  
  // Atributos HTML adicionales
  [key: string]: any;
}

const {
  children,
  text,
  icon,
  iconPosition = 'left',
  type = 'button',
  href,
  variant = 'primary',
  size = 'md',
  shape = 'rounded',
  theme = 'auto',
  accentColor = 'blue',
  disabled = false,
  loading = false,
  active = false,
  pressed = false,
  fullWidth = false,
  block = false,
  noWrap = false,
  ariaLabel,
  ariaDescribedBy,
  class: additionalClasses = '',
  ...rest
} = Astro.props;

// Clases base del botón - MEJORADO
const baseClasses = [
  'inline-flex items-center justify-center font-medium transition-all duration-200 ease-in-out',
  'focus:outline-none focus:ring-2 focus:ring-offset-2',
  'disabled:opacity-50 disabled:cursor-not-allowed disabled:pointer-events-none',
  'active:scale-95'
];

// Variantes de color - MEJORADO
const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500 shadow-sm hover:shadow-md',
  secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500 shadow-sm hover:shadow-md',
  danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 shadow-sm hover:shadow-md',
  success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500 shadow-sm hover:shadow-md',
  warning: 'bg-yellow-600 text-white hover:bg-yellow-700 focus:ring-yellow-500 shadow-sm hover:shadow-md',
  ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',
  outline: 'border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-gray-500',
  link: 'text-blue-600 hover:text-blue-800 hover:underline focus:ring-blue-500 p-0',
  gradient: 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 focus:ring-blue-500 shadow-sm hover:shadow-md'
};

// Tamaños - MEJORADO
const sizeClasses = {
  xs: 'px-2 py-1 text-xs',
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg',
  xl: 'px-8 py-4 text-xl'
};

// Formas - NUEVO
const shapeClasses = {
  square: 'rounded-none',
  rounded: 'rounded-lg',
  pill: 'rounded-full',
  circle: 'rounded-full'
};

// Tema - NUEVO
const themeClasses = {
  light: '',
  dark: 'dark',
  auto: ''
};

// Estados adicionales - NUEVO
const stateClasses = [];
if (active) {
  stateClasses.push('bg-opacity-80 ring-2 ring-offset-2');
}
if (pressed) {
  stateClasses.push('scale-95');
}
if (fullWidth || block) {
  stateClasses.push('w-full');
}
if (noWrap) {
  stateClasses.push('whitespace-nowrap');
}

// Construir clases finales - MEJORADO
const buttonClasses = [
  ...baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  shapeClasses[shape],
  themeClasses[theme],
  ...stateClasses,
  additionalClasses
].filter(Boolean).join(' ');

// Contenido del botón - MEJORADO
const buttonContent = children || text || 'Button';

// Props comunes - MEJORADO
const commonProps = {
  class: buttonClasses,
  disabled: disabled || loading,
  'aria-label': ariaLabel,
  'aria-describedby': ariaDescribedBy,
  ...rest
};
---

{href ? (
  <!-- Enlace estilizado como botón mejorado -->
  <a href={href} {...commonProps}>
    {loading && (
      <svg class="animate-spin -ml-1 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    )}
    
    {icon && iconPosition === 'left' && !loading && (
      <span class="mr-2">
        <slot name="icon">{icon}</slot>
      </span>
    )}
    
    <span class={noWrap ? 'truncate' : ''}>
      <slot>{buttonContent}</slot>
    </span>
    
    {icon && iconPosition === 'right' && !loading && (
      <span class="ml-2">
        <slot name="icon">{icon}</slot>
      </span>
    )}
  </a>
) : (
  <!-- Botón normal mejorado -->
  <button type={type} {...commonProps}>
    {loading && (
      <svg class="animate-spin -ml-1 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    )}
    
    {icon && iconPosition === 'left' && !loading && (
      <span class="mr-2">
        <slot name="icon">{icon}</slot>
      </span>
    )}
    
    <span class={noWrap ? 'truncate' : ''}>
      <slot>{buttonContent}</slot>
    </span>
    
    {icon && iconPosition === 'right' && !loading && (
      <span class="ml-2">
        <slot name="icon">{icon}</slot>
      </span>
    )}
  </button>
)}