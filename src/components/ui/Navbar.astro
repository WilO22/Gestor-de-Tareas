---
// src/components/ui/Navbar.astro
// Componente Navbar mejorado y reutilizable

import Button from './Button.astro';

export interface Props {
  // Configuración del logo/brand
  brandText?: string;
  brandLogo?: string;
  brandHref?: string;
  
  // Configuración del usuario
  user?: {
    name?: string;
    email?: string;
    avatar?: string;
  };
  
  // Estado de autenticación
  showAuthButton?: boolean;
  authButtonText?: string;
  authButtonHref?: string;
  
  // Búsqueda
  showSearch?: boolean;
  searchPlaceholder?: string;
  
  // Navegación
  navItems?: Array<{
    text: string;
    href: string;
    active?: boolean;
  }>;
  
  // Clases adicionales
  class?: string;
}

const {
  brandText = 'TaskFlow',
  brandLogo,
  brandHref = '/',
  user,
  showAuthButton = true,
  authButtonText = 'Iniciar Sesión',
  authButtonHref = '/login',
  showSearch = false,
  searchPlaceholder = 'Buscar...',
  navItems = [],
  class: additionalClasses = ''
} = Astro.props;

// Obtener iniciales del usuario
function getUserInitials(user: any): string {
  if (user?.name) {
    return user.name.split(' ').map((n: string) => n[0]).join('').toUpperCase();
  }
  if (user?.email) {
    return user.email.charAt(0).toUpperCase();
  }
  return 'U';
}
---

<nav class={`bg-white shadow-lg border-b border-gray-200 ${additionalClasses}`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      
      <!-- Logo/Brand -->
      <div class="flex items-center">
        <a href={brandHref} class="flex items-center space-x-3 hover:opacity-80 transition-opacity">
          {brandLogo ? (
            <img src={brandLogo} alt={brandText} class="h-8 w-8" />
          ) : (
            <div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center">
              <span class="text-white font-bold text-sm">T</span>
            </div>
          )}
          <span class="text-xl font-bold text-gray-800">{brandText}</span>
        </a>
      </div>

      <!-- Navegación central -->
      {navItems.length > 0 && (
        <div class="hidden md:flex items-center space-x-8">
          {navItems.map(item => (
            <a 
              href={item.href} 
              class={`text-sm font-medium transition-colors ${
                item.active 
                  ? 'text-blue-600 border-b-2 border-blue-600 pb-1' 
                  : 'text-gray-700 hover:text-blue-600'
              }`}
            >
              {item.text}
            </a>
          ))}
        </div>
      )}

      <!-- Buscador (si está habilitado) -->
      {showSearch && (
        <div class="flex-1 max-w-md mx-8">
          <div class="relative">
            <input
              type="text"
              placeholder={searchPlaceholder}
              class="w-full bg-gray-100 text-gray-800 placeholder-gray-500 px-4 py-2 pl-10 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            />
            <svg
              class="absolute left-3 top-2.5 w-5 h-5 text-gray-400"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
              />
            </svg>
          </div>
        </div>
      )}

      <!-- Sección de usuario/autenticación -->
      <div class="flex items-center space-x-4">
        {user ? (
          <!-- Usuario autenticado -->
          <div class="flex items-center space-x-3">
            <!-- Notificaciones -->
            <button class="p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
              </svg>
            </button>
            
            <!-- Avatar y dropdown de usuario -->
            <div class="relative">
              <button class="flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-100 transition-colors">
                {user.avatar ? (
                  <img src={user.avatar} alt={user.name || user.email} class="w-8 h-8 rounded-full" />
                ) : (
                  <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-semibold text-sm">
                    {getUserInitials(user)}
                  </div>
                )}
                <div class="hidden md:block text-left">
                  <div class="text-sm font-medium text-gray-900">{user.name || 'Usuario'}</div>
                  {user.email && (
                    <div class="text-xs text-gray-500">{user.email}</div>
                  )}
                </div>
                <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              
              <!-- Dropdown menu (implementar con JavaScript) -->
              <div class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-50">
                <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Perfil</a>
                <a href="/settings" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Configuración</a>
                <hr class="my-1">
                <button class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50">Cerrar Sesión</button>
              </div>
            </div>
          </div>
        ) : (
          <!-- Usuario no autenticado -->
          {showAuthButton && (
            <Button
              href={authButtonHref}
              variant="primary"
              size="sm"
              text={authButtonText}
            />
          )}
        )}
      </div>

      <!-- Menú móvil (hamburger) -->
      <div class="md:hidden">
        <button class="p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</nav>

<script>
  // JavaScript para funcionalidad de dropdown y menú móvil
  document.addEventListener('DOMContentLoaded', function() {
    // TODO: Implementar dropdown de usuario
    // TODO: Implementar menú móvil responsive
    console.log('🎯 Navbar: Funcionalidades interactivas pendientes de implementar');
  });
</script>