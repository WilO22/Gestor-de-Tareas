---
// src/components/base/BaseCard.astro
// Componente base unificado para todas las tarjetas del sistema - MEJORADO

export interface Props {
  // Contenido
  title?: string;
  subtitle?: string;
  description?: string;
  
  // Comportamiento
  href?: string;
  clickable?: boolean;
  
  // Estilos - MEJORADO
  variant?: 'default' | 'elevated' | 'bordered' | 'flat' | 'gradient' | 'glass' | 'minimal';
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';
  padding?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
  rounded?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | 'full';
  
  // Tema y colores - NUEVO
  theme?: 'light' | 'dark' | 'auto';
  accentColor?: 'blue' | 'green' | 'red' | 'yellow' | 'purple' | 'pink' | 'indigo';
  
  // Estados - MEJORADO
  loading?: boolean;
  disabled?: boolean;
  selected?: boolean;
  highlighted?: boolean;
  archived?: boolean;
  
  // Interacción - NUEVO
  hover?: boolean;
  focusable?: boolean;
  
  // Layout - NUEVO
  orientation?: 'vertical' | 'horizontal';
  align?: 'start' | 'center' | 'end';
  justify?: 'start' | 'center' | 'end' | 'between' | 'around';
  
  // Clases adicionales
  class?: string;
  
  // Slots disponibles - MEJORADO
  avatar?: boolean;
  actions?: boolean;
  footer?: boolean;
  badge?: boolean;
  media?: boolean;
  stats?: boolean;
}

const {
  title,
  subtitle,
  description,
  href,
  clickable = !!href,
  variant = 'default',
  size = 'md',
  padding = 'md',
  rounded = 'lg',
  theme = 'auto',
  accentColor = 'blue',
  loading = false,
  disabled = false,
  selected = false,
  highlighted = false,
  archived = false,
  hover = true,
  focusable = true,
  orientation = 'vertical',
  align = 'start',
  justify = 'start',
  class: additionalClasses = '',
  avatar = false,
  actions = false,
  footer = false,
  badge = false,
  media = false,
  stats = false
} = Astro.props;

// Clases base - MEJORADO
const baseClasses = [
  'block w-full transition-all duration-200 ease-in-out',
  'focus:outline-none',
  focusable ? 'focus:ring-2 focus:ring-offset-2 focus:ring-blue-500' : ''
].filter(Boolean);

// Variantes de estilo - MEJORADO
const variantClasses = {
  default: 'bg-white border border-gray-200 shadow-sm hover:shadow-md',
  elevated: 'bg-white shadow-lg hover:shadow-xl border-0',
  bordered: 'bg-white border-2 border-gray-300 hover:border-gray-400',
  flat: 'bg-gray-50 hover:bg-gray-100 border-0',
  gradient: 'bg-gradient-to-br from-blue-50 to-indigo-100 border border-blue-200 hover:from-blue-100 hover:to-indigo-200',
  glass: 'bg-white/80 backdrop-blur-sm border border-white/20 shadow-lg',
  minimal: 'bg-transparent border-0 shadow-none hover:bg-gray-50/50'
};

// Tamaños - MEJORADO
const sizeClasses = {
  xs: 'max-w-xs',
  sm: 'max-w-sm',
  md: 'max-w-md',
  lg: 'max-w-lg',
  xl: 'max-w-xl',
  full: 'w-full'
};

// Padding - MEJORADO
const paddingClasses = {
  xs: 'p-2',
  sm: 'p-3',
  md: 'p-4',
  lg: 'p-6',
  xl: 'p-8'
};

// Bordes redondeados - NUEVO
const roundedClasses = {
  none: 'rounded-none',
  sm: 'rounded-sm',
  md: 'rounded-md',
  lg: 'rounded-lg',
  xl: 'rounded-xl',
  full: 'rounded-full'
};

// Tema - NUEVO
const themeClasses = {
  light: '',
  dark: 'dark',
  auto: ''
};

// Colores de acento - NUEVO
const accentClasses = {
  blue: 'focus:ring-blue-500',
  green: 'focus:ring-green-500',
  red: 'focus:ring-red-500',
  yellow: 'focus:ring-yellow-500',
  purple: 'focus:ring-purple-500',
  pink: 'focus:ring-pink-500',
  indigo: 'focus:ring-indigo-500'
};

// Estados especiales - MEJORADO
const stateClasses = [];
if (clickable && !disabled && hover) {
  stateClasses.push('cursor-pointer transform hover:scale-[1.02]');
}
if (disabled) {
  stateClasses.push('opacity-50 cursor-not-allowed pointer-events-none');
}
if (selected) {
  stateClasses.push('ring-2 ring-blue-500 border-blue-500 bg-blue-50');
}
if (highlighted) {
  stateClasses.push('ring-2 ring-yellow-400 border-yellow-400 bg-yellow-50');
}
if (archived) {
  stateClasses.push('opacity-60 grayscale');
}
if (loading) {
  stateClasses.push('animate-pulse');
}

// Layout - NUEVO
const layoutClasses = [];
if (orientation === 'horizontal') {
  layoutClasses.push('flex flex-row');
} else {
  layoutClasses.push('flex flex-col');
}

const alignClasses = {
  start: 'items-start',
  center: 'items-center',
  end: 'items-end'
};

const justifyClasses = {
  start: 'justify-start',
  center: 'justify-center',
  end: 'justify-end',
  between: 'justify-between',
  around: 'justify-around'
};

// Clases finales - MEJORADO
const cardClasses = [
  ...baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  paddingClasses[padding],
  roundedClasses[rounded],
  themeClasses[theme],
  accentClasses[accentColor],
  ...stateClasses,
  ...layoutClasses,
  alignClasses[align],
  justifyClasses[justify],
  additionalClasses
].filter(Boolean).join(' ');

// Elemento wrapper
const Element = href ? 'a' : 'div';
const elementProps = href ? { href } : {};
---

<Element class={cardClasses} {...elementProps}>
  
  {loading ? (
    <!-- Estado de carga mejorado -->
    <div class="animate-pulse space-y-3">
      {media && <div class="w-full h-32 bg-gray-300 rounded"></div>}
      <div class="flex items-center space-x-3">
        {avatar && <div class="w-12 h-12 bg-gray-300 rounded-full"></div>}
        <div class="flex-1">
          <div class="h-4 bg-gray-300 rounded w-3/4 mb-2"></div>
          <div class="h-3 bg-gray-300 rounded w-1/2"></div>
        </div>
      </div>
      <div class="space-y-2">
        <div class="h-3 bg-gray-300 rounded"></div>
        <div class="h-3 bg-gray-300 rounded w-5/6"></div>
      </div>
      {stats && (
        <div class="flex space-x-4">
          <div class="h-3 bg-gray-300 rounded w-12"></div>
          <div class="h-3 bg-gray-300 rounded w-12"></div>
        </div>
      )}
    </div>
  ) : (
    <!-- Contenido normal mejorado -->
    <div class={`flex ${orientation === 'horizontal' ? 'flex-row' : 'flex-col'} h-full`}>
      
      <!-- Media slot - NUEVO -->
      {media && (
        <div class="flex-shrink-0 mb-4">
          <slot name="media" />
        </div>
      )}
      
      <!-- Badge slot - NUEVO -->
      {badge && (
        <div class="flex-shrink-0 mb-2">
          <slot name="badge" />
        </div>
      )}
      
      <!-- Header con avatar y título mejorado -->
      <div class={`flex items-start ${orientation === 'horizontal' ? 'flex-1' : ''} mb-3`}>
        {avatar && (
          <div class="flex-shrink-0 mr-3">
            <slot name="avatar">
              <div class="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 2a4 4 0 100 8 4 4 0 000-8zM2 10a8 8 0 1116 0 8 8 0 01-16 0z" clip-rule="evenodd"></path>
                </svg>
              </div>
            </slot>
          </div>
        )}
        
        <div class="flex-1 min-w-0">
          {title && (
            <h3 class="text-lg font-semibold text-gray-900 truncate mb-1">
              {title}
            </h3>
          )}
          {subtitle && (
            <p class="text-sm text-gray-600 truncate">
              {subtitle}
            </p>
          )}
        </div>
        
        {actions && (
          <div class="flex-shrink-0 ml-2">
            <slot name="actions">
              <button class="p-1 text-gray-400 hover:text-gray-600 rounded hover:bg-gray-100 transition-colors">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z"></path>
                </svg>
              </button>
            </slot>
          </div>
        )}
      </div>
      
      <!-- Contenido principal mejorado -->
      <div class="flex-1">
        {description && (
          <p class="text-gray-700 text-sm mb-3 line-clamp-3">
            {description}
          </p>
        )}
        
        <slot />
      </div>
      
      <!-- Stats slot - NUEVO -->
      {stats && (
        <div class="mt-3 pt-3 border-t border-gray-200">
          <slot name="stats" />
        </div>
      )}
      
      <!-- Footer mejorado -->
      {footer && (
        <div class="mt-4 pt-3 border-t border-gray-200">
          <slot name="footer" />
        </div>
      )}
    </div>
  )}
  
</Element>

<style>
  /* Clase para truncar texto en múltiples líneas */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
